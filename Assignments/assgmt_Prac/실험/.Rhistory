#m<-matrix(c(0,1,1,0),ncol=2,byrow=T)
#colnames(m)<-c("0","1")
#rownames(m)<-c("0","1")
m
a <- c(0,1,1)
b <- c(0,1,1)
a <- c(0,1,1)
b <- c(0,1,1)
data.frame(a,b)
if b >= 2 :
b = 0
#이진벡터 계산 0+1+1 = ?
a <- c(0,1,1)
b = a[1] + a[2] # 0+1
c = b + a[2] # (0+1) + 1
if b >= 2 :
b = 0
if b >= 2 :
b = 0
if (b >= 2) :
b = 0
if (b >= 2) :
b = 0
if(x >= 2){
x <- 0
}
#이진벡터 계산 '0+1+1 = ?' 도출
a <- c(0,1,1)  #문제에 주어진 이진벡터의 식은 계산은 a에 할당된 수(0,1,1)만 사용한다고 가정
x = a[1]+a[2] # 0+1
if(x >= 2){
x <- 0
}
#이진벡터 계산 '0+1+1 = ?' 도출
a <- c(0,1,1)  #문제에 주어진 이진벡터의 식은 계산은 a에 할당된 수(0,1,1)만 사용한다고 가정
#1. 이진계산 0+1+1을 x= 0+1 / y= x+1 로 나누겠습니다.
x = a[1]+a[2] #1.1.1 : x에 첫번째 이진계산 0+1 할당
#
if(x >= 2){   #1.1.2 : 나누어진 첫번째 이진계산식 x가 계산됐을 때 10진법규칙기준(R에서 인식하는 수체계)으로 2이상일경우 x에 a[1]을 할당(이진벡터체계)
x <- a[1]
}
y = x + a[3] #1.2.1 : y에 이어지는 두번째 이진계산 x+1 을 할당
if(y >= 2){  #1.2.2 : 1.1.2에서와 마찬가지로 이진계산식 y가 계산됐을 때 10진법규칙기준(R에서 인식하는 수체계)으로 2이상일경우 y에 a[1]을 할당(이진벡터체계)
y <- 0
}
cat("이진벡터 계산 0+1+1 =",y,"입니다")
a = c(0,1,1)
b = sum(a)
if (b >= 2){      #만일 십진법체계(r언어가 인식하는 수체계)로 'b= sum(a)' 가 2보다 크거나 같게 인식(2진법을 벗어남)할 시
b %%= 2          #해당 결과를 2로 나눈 나머지로 출력 = 2진법 체계는 0과 1로 구성되어,2진법의 맨끝자리수는 2로 나눈 나머지와 같은값을 가짐
}
b %+ 2          #해당 결과를 2로 나눈 나머지로 출력 = 2진법 체계는 0과 1로 구성되어,2진법의 맨끝자리수는 2로 나눈 나머지와 같은값을 가짐
b %= 2          #해당 결과를 2로 나눈 나머지로 출력 = 2진법 체계는 0과 1로 구성되어,2진법의 맨끝자리수는 2로 나눈 나머지와 같은값을 가짐
b = b %% 2          #해당 결과를 2로 나눈 나머지로 출력 = 2진법 체계는 0과 1로 구성되어,2진법의 맨끝자리수는 2로 나눈 나머지와 같은값을 가짐
if (b >= 2){      #만일 십진법체계(r언어가 인식하는 수체계)로 'b= sum(a)' 가 2보다 크거나 같게 인식(2진법을 벗어남)할 시
b = b %% 2          #해당 결과를 2로 나눈 나머지로 출력 = 2진법 체계는 0과 1로 구성되어,2진법의 맨끝자리수는 2로 나눈 나머지와 같은값을 가짐
}
print(b)
cat("이진벡터의 0+1+1 =",b)
#삼진벡터 계산 2*2 + 2 + (1 + 2)*2 + 1 = ?
a = c(0,1,2)
b = a[3]*a[3] + a[3] + (a[2]+a[3])*2 + a[2] # 2*2 + 2 + (1 + 2)*2 + 2 를 b에 할당
if (b >= length(a)){
b = b %% length(a)
}
cat("삼진벡터의 2*2 + 2 + (1 + 2)*2 + 1 =",b)
b = 3 # 2*2 + 2 + (1 + 2)*2 + 2 를 b에 할당
if (b >= length(a)){     # length(a)는 3진벡터 수체계의 갯수 (0,1,2로 3)를 나타내기 때문에 문제의 10진법에 기반한 결과값을 3(0,1,2)으로 나누어 나오는 나머지값이 3진법으로 변환한 결과일 것이다.
b = b %% length(a)
}
cat("삼진벡터의 2*2 + 2 + (1 + 2)*2 + 1 =",b)
#삼진벡터 계산 2*2 + 2 + (1 + 2)*2 + 1 = ?
a = c(0,1,2)
b = a[3]*a[3] + a[3] + (a[2]+a[3])*2 + a[2] # 2*2 + 2 + (1 + 2)*2 + 2 를 b에 할당
if (b >= length(a)){     # length(a)는 3진벡터 수체계의 갯수 (0,1,2로 3)를 나타내기 때문에 문제의 10진법에 기반한 결과값을 3(0,1,2)으로 나누어 나오는 나머지값이 3진법으로 변환한 결과일 것이다.
b = b %% length(a)
}
cat("삼진벡터의 2*2 + 2 + (1 + 2)*2 + 1 =",b)
b = 0 # 2*2 + 2 + (1 + 2)*2 + 2 를 b에 할당
if (b >= length(a)){     # length(a)는 3진벡터 수체계의 갯수 (0,1,2로 3)를 나타내기 때문에 문제의 10진법에 기반한 결과값을 3(0,1,2)으로 나누어 나오는 나머지값이 3진법으로 변환한 결과일 것이다.
b = b %% length(a)
}
cat("삼진벡터의 2*2 + 2 + (1 + 2)*2 + 1 =",b)
b = 1 # 2*2 + 2 + (1 + 2)*2 + 2 를 b에 할당
if (b >= length(a)){     # length(a)는 3진벡터 수체계의 갯수 (0,1,2로 3)를 나타내기 때문에 문제의 10진법에 기반한 결과값을 3(0,1,2)으로 나누어 나오는 나머지값이 3진법으로 변환한 결과일 것이다.
b = b %% length(a)
}
cat("삼진벡터의 2*2 + 2 + (1 + 2)*2 + 1 =",b)
b = 2 # 2*2 + 2 + (1 + 2)*2 + 2 를 b에 할당
if (b >= length(a)){     # length(a)는 3진벡터 수체계의 갯수 (0,1,2로 3)를 나타내기 때문에 문제의 10진법에 기반한 결과값을 3(0,1,2)으로 나누어 나오는 나머지값이 3진법으로 변환한 결과일 것이다.
b = b %% length(a)
}
cat("삼진벡터의 2*2 + 2 + (1 + 2)*2 + 1 =",b)
b = 3 # 2*2 + 2 + (1 + 2)*2 + 2 를 b에 할당
if (b >= length(a)){     # length(a)는 3진벡터 수체계의 갯수 (0,1,2로 3)를 나타내기 때문에 문제의 10진법에 기반한 결과값을 3(0,1,2)으로 나누어 나오는 나머지값이 3진법으로 변환한 결과일 것이다.
b = b %% length(a)
}
cat("삼진벡터의 2*2 + 2 + (1 + 2)*2 + 1 =",b)
b = 4 # 2*2 + 2 + (1 + 2)*2 + 2 를 b에 할당
if (b >= length(a)){     # length(a)는 3진벡터 수체계의 갯수 (0,1,2로 3)를 나타내기 때문에 문제의 10진법에 기반한 결과값을 3(0,1,2)으로 나누어 나오는 나머지값이 3진법으로 변환한 결과일 것이다.
b = b %% length(a)
}
cat("삼진벡터의 2*2 + 2 + (1 + 2)*2 + 1 =",b)
b = 5 # 2*2 + 2 + (1 + 2)*2 + 2 를 b에 할당
if (b >= length(a)){     # length(a)는 3진벡터 수체계의 갯수 (0,1,2로 3)를 나타내기 때문에 문제의 10진법에 기반한 결과값을 3(0,1,2)으로 나누어 나오는 나머지값이 3진법으로 변환한 결과일 것이다.
b = b %% length(a)
}
cat("삼진벡터의 2*2 + 2 + (1 + 2)*2 + 1 =",b)
b = 6 # 2*2 + 2 + (1 + 2)*2 + 2 를 b에 할당
if (b >= length(a)){     # length(a)는 3진벡터 수체계의 갯수 (0,1,2로 3)를 나타내기 때문에 문제의 10진법에 기반한 결과값을 3(0,1,2)으로 나누어 나오는 나머지값이 3진법으로 변환한 결과일 것이다.
b = b %% length(a)
}
cat("삼진벡터의 2*2 + 2 + (1 + 2)*2 + 1 =",b)
b = 7 # 2*2 + 2 + (1 + 2)*2 + 2 를 b에 할당
if (b >= length(a)){     # length(a)는 3진벡터 수체계의 갯수 (0,1,2로 3)를 나타내기 때문에 문제의 10진법에 기반한 결과값을 3(0,1,2)으로 나누어 나오는 나머지값이 3진법으로 변환한 결과일 것이다.
b = b %% length(a)
}
cat("삼진벡터의 2*2 + 2 + (1 + 2)*2 + 1 =",b)
knitr::opts_chunk$set(echo = TRUE)
#이진벡터 계산 0+1+1 = ?
a = c(0,1,1)
b = sum(a) # 0+1+1 을 b에 저장 [ b에 어떠한 값(또는 식)을 넣어도 밑의 코드에서 2진벡터로 변환될것이다 ]
if (b >= 2){      #만일 십진법체계(r언어가 인식하는 수체계)로 'b= sum(a)' 가 2보다 크거나 같게 인식(2진벡터 수체계를 벗어남)할 시
b = b %% 2          #해당 결과를 2로 나눈 나머지로 출력 = 2진법 체계는 0과 1의 두개의 수로 구성되어 , 2진법의 맨끝자리수는 10진수체계상의 수를 2로 나눈 나머지와 같은값을 가질것이다.
}
cat("이진벡터의 0+1+1 =",b)
#삼진벡터 계산 2*2 + 2 + (1 + 2)*2 + 1 = ?
a = c(0,1,2)
b = a[3]*a[3] + a[3] + (a[2]+a[3])*2 + a[2] # 2*2 + 2 + (1 + 2)*2 + 2 를 b에 저장 [ b에 어떠한 값(또는 식)을 넣어도 밑의 코드에서 3진벡터로 변환될것이다 ]
#삼진벡터 계산 2*2 + 2 + (1 + 2)*2 + 1 = ?
a = c(0,1,2)
b = a[3]*a[3] + a[3] + (a[2]+a[3])*2 + a[2] # 2*2 + 2 + (1 + 2)*2 + 2 를 b에 저장 [ b에 어떠한 값(또는 식)을 넣어도 밑의 코드에서 3진벡터로 변환될것이다 ]
if (b >= length(a)){    # 문제 1에서와 같이 length(a)는 3진벡터 수체계의 갯수 (0,1,2로 3)를 나타내기 때문에 문제의 10진법에 기반한 결과값을 3(0,1,2)으로 나누어 나오는 나머지값이 b의 값을 3진벡터로 변환한 결과일 것이다.
b = b %% length(a)
}
cat("삼진벡터의 2*2 + 2 + (1 + 2)*2 + 1 =",b)
setwd("C://Users//JSW//Desktop//강의자료//R프로그래밍//R 실습 및 과제//과제")
getwd()
getwd()
setwd("C://Program Files//R//R-3.6.2//R_programming")
